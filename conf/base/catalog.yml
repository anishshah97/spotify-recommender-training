# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html

# spotify_mpd_raw:
#   type: spotify_recommendations.extras.dask.JSONDataSet.BaggedJSONDataSet
#   filepath: ${DATA_DIR}/01_raw/spotify_mpd/mpd.slice.1000-1999.json

cleaned_mpd_playlists:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/02_intermediate/cleaned_spotify_mpd/*/playlist.parquet

cleaned_mpd_tracks:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/02_intermediate/cleaned_spotify_mpd/*/tracks.parquet

deduped_cleaned_mpd_tracks:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/02_intermediate/deduped_cleaned_spotify_mpd

mpd_track_ids:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/02_intermediate/deduped_cleaned_spotify_mpd
  load_args:
    columns: "track_id"

mpd_track_features:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/03_primary/mpd_track_features/*.parquet

scraped_mpd_track_feature_ids:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/03_primary/mpd_track_features/*.parquet
  load_args:
    columns: "track_spid"

mpd_track_artist_features:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/03_primary/mpd_track_artist_features/*.parquet

scraped_mpd_track_artist_feature_ids:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/03_primary/mpd_track_artist_features/*.parquet
  load_args:
    columns: "artist_spid"

# train_mpd_pids_to_tids:
#   type: pandas.ParquetDataSet
#   filepath: ${DATA_DIR}/03_primary/train_mpd_pids_to_tids.parquet

# test_mpd_pids_to_tids:
#   type: pandas.ParquetDataSet
#   filepath: ${DATA_DIR}/03_primary/test_mpd_pids_to_tids.parquet

split_mpd_pids_to_tids:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/03_primary/split_mpd_pids_to_tids

selected_mpd_playlist_features:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/04_feature/selected_mpd_playlist_features

selected_mpd_track_features:
  type: dask.ParquetDataSet
  filepath: ${DATA_DIR}/04_feature/selected_mpd_track_features

inference_example:
  type: pandas.ParquetDataSet
  filepath: ${DATA_DIR}/05_model_input/inference_example.parquet

mpd_cleaning_notification:
  type: pickle.PickleDataSet
  filepath: ${DATA_DIR}/02_intermediate/mpd_cleaning_notification.pkl

# playlist_training:
#   type: dask.ParquetDataSet
#   filepath: ${DATA_DIR}/05_model_input/playlist_training

# cosine_model:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
#   data_set:
#     type: kedro_mlflow.io.models.MlflowModelSaverDataSet
#     flavor: spotify_recommendations.extras.mlflow.pyfunc_cosine_model
#     pyfunc_workflow: python_model # or loader_module
#     filepath: ${DATA_DIR}/06_models/cosine_model

# cosine_model:
#   type: kedro_mlflow.io.models.MlflowModelSaverDataSet
#   flavor: spotify_recommendations.extras.mlflow.loader_cosine_model
#   pyfunc_workflow: loader_module
#   filepath: ${DATA_DIR}/06_models/cosine_model
#   versioned: false

# cosine_model:
#   type: kedro_mlflow.io.models.MlflowModelSaverDataSet
#   flavor: spotify_recommendations.extras.mlflow.pyfunc_cosine_model
#   pyfunc_workflow: python_model # or loader_module
#   filepath: ${DATA_DIR}/06_models/model
#   versioned: false

cosine_model:
  type: pickle.PickleDataSet
  filepath: ${DATA_DIR}/06_models/cosine_model

cosine_model_db:
  type: pandas.ParquetDataSet
  filepath: ${DATA_DIR}/06_models/db.parquet

prediction:
  type: pickle.PickleDataSet
  filepath: ${DATA_DIR}/07_model_output/prediction.pkl
